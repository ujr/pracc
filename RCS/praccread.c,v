head	1.1;
access;
symbols;
locks
	ujr:1.1; strict;
comment	@ * @;


1.1
date	2008.01.14.22.32.17;	author ujr;	state Exp;
branches;
next	;


desc
@Pracc API: read an account to get its balance and limit
@


1.1
log
@Initial revision
@
text
@#include "pracc.h"
#include "simpleio.h"
#include <errno.h>
#include <unistd.h>

/* return 0 if ok, 1 if no pracc file, -1 on error */

int praccread(const char *account, long *bp, long *lp)
{
  int oldfd;
  unsigned n;
  int c, partial;
  char line[MAXLINE];
  char *p, *path;
  long value, balance, limit;

  if ((oldfd = dup(0)) < 0) return -1; // see errno
  if ((path = praccpath(account)) == 0) return -1; // ENOMEM
  if (setin(path) < 0) {
  	int saverr = errno;
  	(void) close(oldfd);
  	free(path);
  	errno = saverr;
  	if (errno == ENOENT) return 1; // no acct
  	return -1; // see errno
  }
  free(path);

  balance = limit = 0;
  while (getline(p=line, sizeof(line), '\n', &partial) > 0) {
  	switch (c = *p++) {
  		case '-': /* debit line */
  			n = scanu(p, &value);
  			if (n > 0) balance -= value;
  			break;
  		case '+': /* credit line */
  			n = scanu(p, &value);
  			if (n > 0) balance += value;
  			break;
  		case '=': /* reset line */
  			n = scani(p, &value);
  			if (n > 0) balance = value;
  			break;
  		case '$': /* limit line */
  			n = scani(p, &value);
  			if (n > 0) limit = value;
  			else limit = UNLIMITED;
  			break;
  		default: /* skip */
  			break;
  	}
endline:
  	if (partial) skipline('\n');
  }

  if (dup2(oldfd, 0) < 0) return -1;

  if (bp) *bp = balance;
  if (lp) *lp = limit;

  return 0; // SUCCESS
}
@
